run:
  timeout: 10m

linters:
  enable:
    - depguard
    - err113
    - errcheck
    - forbidigo
    - importas
    - nolintlint
    - revive
    - sloglint
    - spancheck
    - wrapcheck

issues:
  exclude-files:
    - _test\.go$
  exclude-dirs:
    - internal/errors
  max-issues-per-linter: 0
  max-same-issues: 0

linters-settings:
  depguard:
    rules:
      main:
        deny:
          - pkg: "errors"
            desc: not allowed, use 'github.com/angelokurtis/rest-api-concurrency/internal/errors'
          - pkg: "github.com/pkg/errors"
            desc: not allowed, use 'github.com/angelokurtis/rest-api-concurrency/internal/errors'
          - pkg: "github.com/pingcap/errors"
            desc: not allowed, use 'github.com/angelokurtis/rest-api-concurrency/internal/errors'
          - pkg: "golang.org/x/xerrors"
            desc: not allowed, use 'github.com/angelokurtis/rest-api-concurrency/internal/errors'
          - pkg: "github.com/go-errors/errors"
            desc: not allowed, use 'github.com/angelokurtis/rest-api-concurrency/internal/errors'
          - pkg: "io/ioutil"
            desc: ioutil is deprecated after 1.16, 1.17, use os and io package instead

  errcheck:
    check-type-assertions: true
    check-blank: true
    disable-default-exclusions: true

  forbidigo:
    forbid:
      - p: ^klog\.(V|Info|Error)(Depth|ln|lnDepth|f|fDepth|S|SDepth)?$
        msg: the logger should be obtained using `FromContext` instead of being used directly.

  importas:
    alias:
      - pkg: k8s.io/api/(\w+)/(v[\w\d]+)
        alias: $1$2
      - pkg: k8s.io/apimachinery/pkg/apis/(\w+)/(v[\w\d]+)
        alias: $1$2
      - pkg: github.com/caarlos0/env/(v[\w\d]+)
        alias: env$1

  revive:
    ignore-generated-header: true
    rules: [
      { name: "argument-limit", disabled: false },
      { name: "atomic", disabled: false },
      { name: "banned-characters", disabled: false },
      { name: "bare-return", disabled: false },
      { name: "blank-imports", disabled: false },
      { name: "bool-literal-in-expr", disabled: false },
      { name: "call-to-gc", disabled: false },
      { name: "cognitive-complexity", disabled: true },
      { name: "comment-spacings", disabled: false },
      { name: "confusing-naming", disabled: false },
      { name: "confusing-results", disabled: false },
      { name: "constant-logical-expr", disabled: false },
      { name: "context-as-argument", disabled: false },
      { name: "context-keys-type", disabled: false },
      { name: "datarace", disabled: false },
      { name: "defer", disabled: false,  arguments: [ [ "call-chain", "loop", "method-call", "recover", "immediate-recover", "return" ] ] },
      { name: "dot-imports", disabled: false },
      { name: "duplicated-imports", disabled: false },
      { name: "early-return", disabled: false },
      { name: "empty-block", disabled: false },
      { name: "empty-lines", disabled: false },
      { name: "error-naming", disabled: false },
      { name: "error-return", disabled: false },
      { name: "error-strings", disabled: false },
      { name: "errorf", disabled: false },
      { name: "exported", disabled: false },
      { name: "file-header", disabled: false },
      { name: "flag-parameter", disabled: true },
      { name: "function-result-limit", disabled: false },
      { name: "get-return", disabled: false },
      { name: "identical-branches", disabled: false },
      { name: "if-return", disabled: false },
      { name: "import-alias-naming", disabled: false },
      { name: "import-shadowing", disabled: false },
      { name: "imports-blacklist", disabled: false },
      { name: "increment-decrement", disabled: false },
      { name: "indent-error-flow", disabled: false },
      { name: "max-public-structs", disabled: true },
      { name: "modifies-parameter", disabled: false },
      { name: "modifies-value-receiver", disabled: false },
      { name: "nested-structs", disabled: true },
      { name: "optimize-operands-order", disabled: false },
      { name: "package-comments", disabled: false },
      { name: "range-val-address", disabled: false },
      { name: "range-val-in-closure", disabled: false },
      { name: "range", disabled: false },
      { name: "receiver-naming", disabled: false },
      { name: "redefines-builtin-id", disabled: false },
      { name: "redundant-import-alias", disabled: false },
      { name: "string-format", disabled: false },
      { name: "string-of-int", disabled: false },
      { name: "struct-tag", disabled: false },
      { name: "superfluous-else", disabled: false },
      { name: "time-equal", disabled: false },
      { name: "time-naming", disabled: false },
      { name: "unchecked-type-assertion", disabled: false },
      { name: "unconditional-recursion", disabled: false },
      { name: "unexported-naming", disabled: false },
      { name: "unexported-return", disabled: false },
      { name: "unhandled-error", disabled: false },
      { name: "unnecessary-stmt", disabled: false },
      { name: "unreachable-code", disabled: false },
      { name: "unused-parameter", disabled: true },
      { name: "unused-receiver", disabled: true },
      { name: "use-any", disabled: false },
      { name: "useless-break", disabled: false },
      { name: "var-declaration", disabled: false },
      { name: "var-naming", disabled: false },
      { name: "waitgroup-by-value", disabled: false },
    ]

  sloglint:
    context: "scope"
    key-naming-case: snake
    forbidden-keys:
      - time
      - level
      - msg

  spancheck:
    checks:
      - end
      - record-error
      - set-status
    ignore-check-signatures:
      - "span.Error"
      - "span.ErrorWithStack"
    extra-start-span-signatures:
      - "github.com/angelokurtis/go-otel/span.Start:opentelemetry"
      - "github.com/angelokurtis/go-otel/span.StartWithName:opentelemetry"

  wrapcheck:
    ignorePackageGlobs:
      - golang.org/x/sync/*
      - github.com/angelokurtis/rest-api-concurrency/*
