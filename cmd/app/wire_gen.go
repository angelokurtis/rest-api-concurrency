// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/angelokurtis/rest-api-concurrency/internal/postgres"
	"github.com/angelokurtis/rest-api-concurrency/pkg/app"
)

// Injectors from wire_inj.go:

func NewRunner(ctx context.Context) (Runner, func(), error) {
	conn, cleanup, err := postgres.NewConnection(ctx)
	if err != nil {
		return nil, nil, err
	}
	queries := postgres.New(conn)
	runner := &app.Runner{
		PostgreSQL: queries,
	}
	return runner, func() {
		cleanup()
	}, nil
}

// wire_inj.go:

type Runner interface {
	Run(ctx context.Context) error
}
