// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/angelokurtis/rest-api-concurrency/internal/db"
	"github.com/angelokurtis/rest-api-concurrency/internal/term"
	"github.com/angelokurtis/rest-api-concurrency/pkg/app"
)

// Injectors from wire_inj.go:

func NewRunner(ctx context.Context) (Runner, func(), error) {
	termRenderer, err := term.NewGlamourTermRenderer()
	if err != nil {
		return nil, nil, err
	}
	markdownRenderer := term.NewMarkdownRenderer(termRenderer)
	conn, cleanup, err := db.NewConnection(ctx)
	if err != nil {
		return nil, nil, err
	}
	queries := db.New(conn)
	runner := &app.Runner{
		Renderer:          markdownRenderer,
		ClusterRepository: queries,
	}
	return runner, func() {
		cleanup()
	}, nil
}

// wire_inj.go:

type Runner interface {
	Run(ctx context.Context) error
}
